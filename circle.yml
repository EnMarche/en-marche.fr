machine:
    node:
        version: 4.5.0
    php:
        version: 7.1.6
    environment:
        YARN_VERSION: 0.18.1
        PATH: "${PATH}:${HOME}/.yarn/bin:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin"
        DATABASE_HOST: 127.0.0.1
        DATABASE_USER: ubuntu
        DATABASE_PASSWORD: ''
        DATABASE_NAME: circle_test
        RABBITMQ_HOST: 'localhost'
        RABBITMQ_PORT: '5672'
        RABBITMQ_USER: 'guest'
        RABBITMQ_PASSWORD: 'guest'
    hosts:
        test.enmarche.code: 127.0.0.1
        test.m.enmarche.code: 127.0.0.1
        test.legislatives.enmarche.code: 127.0.0.1
    services:
        - docker
        - rabbitmq-server

dependencies:
    cache_directories:
        - ~/.yarn
        - ~/.cache/yarn
        - ~/.composer/cache/files
    pre:
        - |
            if [[ ! -e ~/.yarn/bin/yarn || $(yarn --version) != "${YARN_VERSION}" ]]; then
              curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
            fi
        - echo "memory_limit = 2048M" > /opt/circleci/php/$(phpenv global)/etc/conf.d/memory.ini
        - rm /opt/circleci/php/$(phpenv global)/etc/conf.d/xdebug.ini
        # Create SSH public and private keys for the OAuth server
        - rm -rf var/*.key
        - openssl genrsa -out var/private.key 1024
        - openssl rsa -in var/private.key -pubout -out var/public.key
        - chmod 660 var/{private,public}.key

    override:
        - yarn install

        # Try to build production JS (required for selenium tests)
        - yarn run build-prod
        - yarn run build-amp

        - composer install --no-interaction

        # Set up RabbitMQ
        - sudo rabbitmqctl add_vhost /test
        - sudo rabbitmqctl set_permissions -p /test guest ".*" ".*" ".*"
        - bin/console rabbitmq:setup-fabric --env=test

test:
    override:
        # Lint and test JS
        - yarn lint
        - yarn test

        # Lint YML
        - ./bin/console lint:yaml app/config

        # Lint PHP
        - |
            COMMIT_RANGE=$(echo "${CIRCLE_COMPARE_URL}" | cut -d/ -f7)
            # Fix single commit
            if [[ $COMMIT_RANGE != *"..."* ]]; then
              COMMIT_RANGE="${COMMIT_RANGE}~...${COMMIT_RANGE}"
            fi
            echo "${COMMIT_RANGE}"
            CHANGED_FILES=$(git diff --name-only --diff-filter=ACMRTUXB "${COMMIT_RANGE}" --)
            echo "${CHANGED_FILES}"
            if ! echo "${CHANGED_FILES}" | grep -qE "^(\\.php_cs(\\.dist)?|composer\\.lock)$"; then IFS=$'\n' EXTRA_ARGS=('--path-mode=intersection' '--' ${CHANGED_FILES[@]}); fi
            php -d memory_limit=1024m vendor/bin/php-cs-fixer fix --config=.php_cs.dist --dry-run --no-interaction -v --using-cache=no "${EXTRA_ARGS[@]}"

        # Prepare PHP tests
        - rm -rf var/cache/test /tmp/data.db app/data/dumped_referents_users:
            parallel: true
        - ./bin/console doctrine:schema:create --env=test_sqlite:
            parallel: true
        - ./bin/console doctrine:schema:drop --force --env=test_mysql:
            parallel: true
        - ./bin/console doctrine:database:import -n --env=test_mysql -- dump/dump-2017.sql:
            parallel: true
        - ./bin/console doctrine:migrations:migrate -n --env=test_mysql:
            parallel: true
        - mkdir -p $CIRCLE_TEST_REPORTS/phpunit:
            parallel: true
        - mkdir -p $CIRCLE_TEST_REPORTS/behat:
            parallel: true

        # Check ORM mapping
        - ./bin/console doctrine:schema:validate --env=test_mysql

        # PHP unit and functional tests
        - mkdir -p behat/reports
        - ./vendor/bin/behat -vvv --colors --profile ci -f progress -o std -f junit -o behat/reports/ --
        - mv behat/reports/ $CIRCLE_TEST_REPORTS/behat/

        - case $CIRCLE_NODE_INDEX in 0) ./vendor/bin/phpunit --group $GROUP1 --log-junit $CIRCLE_TEST_REPORTS/phpunit/junit.xml ;; 1) ./vendor/bin/phpunit --group $GROUP2 --log-junit $CIRCLE_TEST_REPORTS/phpunit/junit.xml ;; 2) ./vendor/bin/phpunit --exclude-group $GROUP1,$GROUP2 --log-junit $CIRCLE_TEST_REPORTS/phpunit/junit.xml ;; esac:
            parallel: true
            environment:
                GROUP1: adherent,amp,article,boardMember,citizenProject,referent,summary
                GROUP2: committee,committeeManager,coordinator,documents,donation,eventManager,explainer,facebook,home,invitation,legislatives,jeMarche,map,membership

        # Check for vulnerable dependencies
        - ./vendor/bin/security-checker security:check

deployment:
    master:
        branch: master
        owner: EnMarche
        commands:
            # Builds and pushes image to registry
            - bash scripts/build.sh master

            # Deploys image and migrates database
            - bash scripts/deployment.sh preprod
    release:
        branch: release
        owner: EnMarche
        commands:
            # Builds and pushes image to registry
            - bash scripts/build.sh release

            # Deploys image and migrates database
            - bash scripts/deployment.sh release
    develop:
       branch: develop
       owner: EnMarche
       commands:
            # Builds and pushes image to registry
            - bash scripts/build.sh develop

            # Deploys image and migrates database
            - bash scripts/deployment.sh develop
